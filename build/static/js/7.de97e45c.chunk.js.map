{"version":3,"sources":["components/listhourfordetail.js","components/listshowtimefordetail.js","components/listclusterfordetail.js","page/detail-movie.js"],"names":["connect","state","detailMovie","Reducer","DetailMovie","checkAccount","LoginAndRegister","dispatch","sendValuecheckLogoutLoginAndBuyTickets","maLichChieu","value","action","props","history","useHistory","hour","showtime","cluster","localStorage","getItem","className","onClick","lichChieu","item","thongTinRap","tenCumRap","Date","ngayChieuGioChieu","toLocaleDateString","toLocaleTimeString","push","nextPagesToBookingSeat","LoginForBookingSeat","data-toggle","data-target","useState","open","setOpen","arrHourTime","map","index","key","getHourTime","arrShowTime","indexOf","getShowTimes","loading","getDetailMovie","maPhim","destroyDetailMovie","setLoadingTrue","show","setShow","useEffect","match","params","id","console","log","style","backgroundImage","hinhAnh","src","alt","tenPhim","danhGia","aria-hidden","moTa","ngayKhoiChieu","Button","variant","Modal","onHide","Header","closeButton","Title","Body","width","trailer","frameborder","allow","allowfullscreen","undefined","arrCluster","renderCluster"],"mappings":"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","file":"static/js/7.de97e45c.chunk.js","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { Fragment } from \"react\";\nimport * as action from \"../actions/index\";\n\nfunction ListHourForDetail(props) {\n  const history = useHistory();\n  let { hour, showtime, cluster } = props;\n  const nextPagesToBookingSeat = () => {\n    for (let item of props.detailMovie.lichChieu) {\n      if (\n        item.thongTinRap.tenCumRap === cluster &&\n        new Date(item.ngayChieuGioChieu).toLocaleDateString() === showtime &&\n        new Date(item.ngayChieuGioChieu).toLocaleTimeString() === hour\n      ) {\n        history.push(`/book-seat/${item.maLichChieu}`);\n      }\n    }\n  };\n  const LoginForBookingSeat = () => {\n    for (let item of props.detailMovie.lichChieu) {\n      if (\n        item.thongTinRap.tenCumRap === cluster &&\n        new Date(item.ngayChieuGioChieu).toLocaleDateString() === showtime &&\n        new Date(item.ngayChieuGioChieu).toLocaleTimeString() === hour\n      ) {\n        props.sendValuecheckLogoutLoginAndBuyTickets(item.maLichChieu, false);\n      }\n    }\n  };\n  return (\n    <Fragment>\n      {\" \"}\n      {localStorage.getItem(\"user\") && props.checkAccount === false ? (\n        <div\n          className=\"listhour-for-detail\"\n          onClick={() => {\n            nextPagesToBookingSeat();\n          }}\n        >\n          {hour}\n        </div>\n      ) : (\n        <div\n          onClick={() => {\n            LoginForBookingSeat();\n          }}\n          className=\"listhour-for-detail\"\n          data-toggle=\"modal\"\n          data-target=\"#exampleModal\"\n        >\n          {hour}\n        </div>\n      )}\n    </Fragment>\n  );\n}\nconst mapStateToProps = (state) => {\n  return {\n    detailMovie: state.Reducer.DetailMovie,\n    checkAccount: state.LoginAndRegister.checkAccount,\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    sendValuecheckLogoutLoginAndBuyTickets: (maLichChieu, value) => {\n      dispatch(\n        action.actSendValuecheckLogoutLoginAndBuyTickets(maLichChieu, value)\n      );\n    },\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(ListHourForDetail);\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Fragment } from \"react\";\nimport ListHourForDetail from \"../components/listhourfordetail.js\";\nfunction ListShowTimeForDetail(props) {\n  const [open, setOpen] = useState(false);\n  let { showtime, cluster } = props;\n\n  const getHourTime = () => {\n    let arrHourTime = [];\n    for (let item of props.detailMovie.lichChieu) {\n      if (item.thongTinRap.tenCumRap === cluster) {\n        if (\n          new Date(item.ngayChieuGioChieu).toLocaleDateString() === showtime\n        ) {\n          arrHourTime.push(\n            new Date(item.ngayChieuGioChieu).toLocaleTimeString()\n          );\n        }\n      }\n    }\n    return arrHourTime.map((item, index) => {\n      return (\n        <ListHourForDetail\n          hour={item}\n          key={index}\n          cluster={cluster}\n          showtime={showtime}\n        />\n      );\n    });\n  };\n  return (\n    <Fragment>\n      <div\n        className=\"listshowtime-for-detail\"\n        onClick={() => {\n          setOpen(!open);\n        }}\n      >\n        {showtime}\n      </div>\n      {open === false ? \"\" : <div> {getHourTime()}</div>}\n    </Fragment>\n  );\n}\nconst mapStateToProps = (state) => {\n  return {\n    detailMovie: state.Reducer.DetailMovie,\n  };\n};\nexport default connect(mapStateToProps, null)(ListShowTimeForDetail);\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport ListShowTimeForDetail from \"../components/listshowtimefordetail\";\nimport { Fragment } from \"react\";\nfunction ListClusterForDetail(props) {\n  const [open, setOpen] = useState(false);\n\n  let { cluster } = props;\n\n  const getShowTimes = () => {\n    let arrShowTime = [];\n    for (let item of props.detailMovie.lichChieu) {\n      if (item.thongTinRap.tenCumRap === cluster) {\n        if (\n          arrShowTime.indexOf(\n            new Date(item.ngayChieuGioChieu).toLocaleDateString()\n          ) === -1\n        ) {\n          arrShowTime.push(\n            new Date(item.ngayChieuGioChieu).toLocaleDateString()\n          );\n        }\n      }\n    }\n    return arrShowTime.map((item, index) => {\n      return (\n        <ListShowTimeForDetail showtime={item} key={index} cluster={cluster} />\n      );\n    });\n  };\n\n  return (\n    <Fragment>\n      <div\n        className=\"cluster-for-detail\"\n        onClick={() => {\n          setOpen(!open);\n        }}\n      >\n        {cluster}\n      </div>\n      {open === false ? \"\" : <div> {getShowTimes()}</div>}\n    </Fragment>\n  );\n}\nconst mapStateToProps = (state) => {\n  return {\n    detailMovie: state.Reducer.DetailMovie,\n  };\n};\nexport default connect(mapStateToProps, null)(ListClusterForDetail);\n","import React, { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport \"../components/styled-components/detailmovie.css\";\nimport { connect } from \"react-redux\";\nimport * as action from \"../actions/index\";\nimport ListClusterForDetail from \"../components/listclusterfordetail.js\";\nimport Iframe from \"react-iframe\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Button from \"react-bootstrap/Button\";\nimport LazyLoadComponent from \"../components/lazyloadcomponent\";\nfunction DetailMovie(props) {\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  useEffect(() => {\n    props.getDetailMovie(props.match.params.id);\n  }, []);\n  useEffect(() => {\n    return () => {\n      props.destroyDetailMovie();\n      props.setLoadingTrue();\n    };\n  }, []);\n\n  const renderCluster = () => {\n    if (props.detailMovie.lichChieu !== undefined) {\n      let arrCluster = [];\n      for (let item of props.detailMovie.lichChieu) {\n        if (arrCluster.indexOf(item.thongTinRap.tenCumRap) === -1) {\n          arrCluster.push(item.thongTinRap.tenCumRap);\n        }\n      }\n      return arrCluster.map((item, index) => {\n        return <ListClusterForDetail key={index} cluster={item} />;\n      });\n    }\n  };\n  console.log(props.loading);\n\n  if (props.loading) return <LazyLoadComponent />;\n  else\n    return (\n      <div className=\"p-detail-movie\">\n        <div\n          className=\"detail-movie\"\n          style={{ backgroundImage: `url(${props.detailMovie.hinhAnh})` }}\n        >\n          <div className=\"cloud-img animation-cloud1\">\n            <img src=\"/img/cloud.png\" alt=\"\" />\n          </div>\n          <div className=\"cloud-img  animation-cloud2\">\n            <img src=\"/img/cloud.png\" alt=\"\" />\n          </div>\n          <div className=\"cloud-img  animation-cloud3\">\n            <img src=\"/img/cloud.png\" alt=\"\" />\n          </div>\n          <div className=\"cloud-img  animation-cloud4\">\n            <img src=\"/img/cloud.png\" alt=\"\" />\n          </div>\n\n          <div className=\"container \">\n            <div className=\"row justify-content-center \">\n              <div className=\"col-sm-10 margin-top-100px\">\n                <div className=\"row \">\n                  <div className=\"col-sm-8 d-flex detail-box-movie\">\n                    <div className=\"hover-caption\">\n                      <img\n                        className=\"img-fluid img-width-height\"\n                        src={props.detailMovie.hinhAnh}\n                        alt=\"\"\n                      />\n                      <div className=\"content-movie-detail d-flex\">\n                        <div className=\"content-infomation-movie\">\n                          <span className=\"span-style-title-film \">\n                            Tên Phim : {props.detailMovie.tenPhim}\n                          </span>\n                          <span className=\"span-style\">\n                            Đánh Giá : {props.detailMovie.danhGia}\n                            <i className=\"fa fa-star-o\" aria-hidden=\"true\"></i>\n                          </span>\n                          <span className=\"span-style\">\n                            Mô Tả : {props.detailMovie.moTa}\n                          </span>\n                          <span className=\"span-style\">\n                            Ngày Khởi Chiếu :\n                            {new Date(\n                              props.detailMovie.ngayKhoiChieu\n                            ).toLocaleDateString()}\n                          </span>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"video-detail-movie\">\n                      <Button variant=\"primary\" onClick={handleShow}>\n                        <span>\n                          Watch Trailer\n                          <i className=\"fa fa-play-circle\" aria-hidden=\"true\">\n                            &nbsp;\n                          </i>\n                        </span>\n                      </Button>\n\n                      <Modal show={show} onHide={handleClose}>\n                        <Modal.Header closeButton>\n                          <Modal.Title></Modal.Title>\n                        </Modal.Header>\n                        <Modal.Body>\n                          <Iframe\n                            width=\"100%\"\n                            src={props.detailMovie.trailer}\n                            frameborder=\"0\"\n                            allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\n                            allowfullscreen\n                            className=\"myiframe\"\n                          ></Iframe>\n                        </Modal.Body>\n                      </Modal>\n                    </div>\n                  </div>\n                  <div className=\"col-sm-4 mt-3\">\n                    <div className=\"info-detailmovie-bookingseat\">\n                      <div className=\"padding-top-bottom-100 text-center\">\n                        Thông Tin Chi Tiết Đặt Vé\n                      </div>\n                      <div className=\"bookticket-movie container mt-3\">\n                        {renderCluster()}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n}\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getDetailMovie: (maPhim) => {\n      dispatch(action.actGetDetailMovieAPI(maPhim));\n    },\n    destroyDetailMovie: () => {\n      dispatch(action.actDestroyDetailMovie({}));\n    },\n    setLoadingTrue: () => {\n      dispatch(action.actSetLoadingValueTrue());\n    },\n  };\n};\nconst mapStateToProps = (state) => {\n  return {\n    detailMovie: state.Reducer.DetailMovie,\n    loading: state.Reducer.loading,\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(DetailMovie);\n"],"sourceRoot":""}